{"version":3,"sources":["scripts/helper.js","scripts/mls.js","scripts/test.js","scripts/index.js"],"names":["drawBuffer","width","height","context","data","step","Math","ceil","length","amp","i","min","max","j","datum","fillRect","drawAutocorrelation","autocorrelation","idcanvas","canvas","document","getElementById","window","innerWidth","innerHeight","ctx","getContext","clearRect","maxAutocorrValue","apply","_toConsumableArray","forEach","value","index","x","padding","y","beginPath","moveTo","lineTo","strokeStyle","stroke","fillStyle","textAlign","textBaseline","xLabelIncrement","fillText","yLabelIncrement","toFixed","clearCanvas","exports","canvas1","canvas2","canvasLeft","canvasRight","drawResults","signalrecorded","audioCanvasId","corrCanvasId","correlation","canvasSide","BitError","_Error","message","_this","_classCallCheck","_callSuper","name","_inherits","_wrapNativeSuper","Error","_createClass","bittaps","lfsr","taps","buf","nbits","sr","slice","out","_loop","feedback","push","t","shift","mls","n","seed","arguments","undefined","concat","Array","fill","generateMLS","parseInt","_helper","require","_mls","_typeof","o","Symbol","iterator","constructor","prototype","_regeneratorRuntime","e","r","Object","hasOwnProperty","defineProperty","a","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","stop","rval","handle","complete","finish","catch","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","_next","_throw","_defineProperties","_toPropertyKey","key","_defineProperty","_toPrimitive","toPrimitive","String","Number","isSafari","test","navigator","userAgent","CANVAS","TestLatencyMLS","stream","safariVersionIndex","indexOf","versionString","substring","safariVersion","parseFloat","micsource","audioContext","createMediaStreamSource","recordGainNode","createGain","connect","gain","dest","createMediaStreamDestination","channelCount","_initialize","_callee","ac","btnId","debugCanvas","_callee$","_context","worker","Worker","URL","import","meta","url","addEventListener","workerMessageHanlder","console","log","insertAdjacentHTML","onAudioPermissionGranted","_x","_x2","_x3","_x4","inputStream","noisemls","noiseBuffer","generateAudio","sampleRate","silenceBuffer","generateSilence","userMediaStream","getCorrectStreamForSafari","getAudioTracks","_ref","_callee2","track","_callee2$","_context2","getSettings","_x5","displayStart","content","innerHTML","startbutton","createElement","innerText","onclick","onAudioSetupFinished","appendChild","_onAudioSetupFinished","_callee3","_callee3$","_context3","prepareAudioToPlayAndrecord","silenceSource","createBufferSource","buffer","destination","start","onended","disconnect","noiseSource","chunks","mediaRecorder","MediaRecorder","ondataavailable","_ref2","_callee4","event","_callee4$","_context4","_x6","onstop","_callee5","_callee5$","_context5","displayAudioTagElem","mimeType","finishTest","doTheTest","_blobToAudioBuffer","_callee6","blob","arrayBuffer","_callee6$","_context6","decodeAudioData","_x7","_x8","postMessage","command","array","channel","peakValuePow","displayresults","_displayAudioTagElem","_callee7","recordedAudio","_callee7$","_context7","Blob","blobToAudioBuffer","data1","getChannelData","data2","maxLag","revokeObjectURL","_x9","_x10","mlsSequence","frequency","audioBuffer","createBuffer","bufferData","silenght","trunc","peak","mlssignal","roundtriplatency","peakIndex","ratioIs","log10","mean","error","numberOfChannels","hidden","_test","TEST_LAT_MLS_BTN_ID","constraints","audio","echoCancellation","noiseSuppression","autoGainControl","latency","main","mediaDevices","getUserMedia","AudioContext","latencyHint","initialize"],"mappings":"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","file":"scripts.c4c7b3e2.js","sourceRoot":"../src","sourcesContent":["\nfunction drawBuffer(width, height, context, data) {\n    const step = Math.ceil(data.length / width)\n    const amp = height / 2\n    for (let i = 0; i < width; i++) {\n        let min = 1.0\n        let max = -1.0\n        for (let j = 0; j < step; j++) {\n            const datum = data[(i * step) + j]\n            if (datum < min)\n                min = datum\n            if (datum > max)\n                max = datum\n        }\n        context.fillRect(i, (1 + min) * amp, 1, Math.max(1, (max - min) * amp))\n    }\n}\n\nexport function drawAutocorrelation(autocorrelation, idcanvas) {\n    const canvas = document.getElementById(idcanvas)\n    canvas.width = window.innerWidth / 2\n    canvas.height = window.innerHeight / 2\n    const ctx = canvas.getContext('2d')\n\n    // Clear previous drawings\n    ctx.clearRect(0, 0, canvas.width, canvas.height)\n\n    // Constants for drawing\n    const width = canvas.width\n    const height = canvas.height\n    const maxAutocorrValue = Math.max(...autocorrelation)\n    const padding = 40 // Padding for labels\n\n    // Draw each point in the autocorrelation array\n    autocorrelation.forEach((value, index) => {\n        const x = (index / autocorrelation.length) * (width - padding) + padding / 2\n        const y = (1 - (value / maxAutocorrValue)) * (height - padding) + padding / 2\n\n        // Draw a line from the middle to the value point\n        ctx.beginPath()\n        ctx.moveTo(x, height - padding / 2) // Start at the bottom of the plot area\n        ctx.lineTo(x, y) // Draw to the computed y\n        ctx.strokeStyle = '#FF0000' // Red color for the line\n        ctx.stroke()\n    })\n\n    // Draw labels on the X axis\n    ctx.fillStyle = '#000000' // Black color for text\n    ctx.textAlign = 'center'\n    ctx.textBaseline = 'top'\n    const xLabelIncrement = Math.ceil(autocorrelation.length / 10) // Label every 10th index or so\n    for (let i = 0; i <= autocorrelation.length; i += xLabelIncrement) {\n        const x = (i / autocorrelation.length) * (width - padding) + padding / 2\n        ctx.fillText(i, x, height - padding / 4)\n    }\n\n    // Draw labels on the Y axis\n    ctx.textAlign = 'right'\n    ctx.textBaseline = 'middle'\n    const yLabelIncrement = maxAutocorrValue / 5 // Five labels on the y-axis\n    for (let i = 0; i <= 5; i++) {\n        const value = (yLabelIncrement * i).toFixed(2)\n        const y = (1 - (i / 5)) * (height - padding) + padding / 2\n        ctx.fillText(value, padding / 2 - 10, y)\n    }\n}\n\nexport const clearCanvas = () => {\n    const canvas1 = document.getElementById('autocorrelationCanvas1')\n    canvas1.width = window.innerWidth / 2\n    canvas1.height = window.innerHeight / 2\n    const ctx1 = canvas1.getContext('2d')\n    ctx1.clearRect(0, 0, canvas1.width, canvas1.height)\n\n    const canvas2 = document.getElementById('autocorrelationCanvas2')\n    canvas2.width = window.innerWidth / 2\n    canvas2.height = window.innerHeight / 2\n    const ctx2 = canvas2.getContext('2d')\n    ctx2.clearRect(0, 0, canvas2.width, canvas2.height)\n\n    const canvasLeft = document.getElementById('leftChannelCanvas')\n    const ctxLeft = canvasLeft.getContext('2d')\n    ctxLeft.clearRect(0, 0, canvasLeft.width, canvasLeft.height)\n\n    const canvasRight = document.getElementById('rightChannelCanvas')\n    const ctxRight = canvasRight.getContext('2d')\n    ctxRight.clearRect(0, 0, canvasRight.width, canvasRight.height)\n}\n\nexport const drawResults = (signalrecorded, audioCanvasId, corrCanvasId, correlation) => {\n    const canvasSide = document.getElementById(audioCanvasId)\n    drawBuffer(canvasSide.width, canvasSide.height, canvasSide.getContext('2d'), signalrecorded)\n    drawAutocorrelation(correlation, corrCanvasId)\n}\n","\nclass BitError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"BitError\";\n    }\n}\n\nconst bittaps = {\n    2: [1], 3: [2], 4: [3], 5: [2], 6: [5], 7: [6], 8: [4, 5, 6],\n    9: [5], 10: [7], 11: [9], 12: [6, 8, 11], 13: [4, 12], 14: [5, 13],\n    15: [14], 16: [4, 13, 15]\n};\n\nfunction lfsr(taps, buf) {\n    let nbits = buf.length;\n    let sr = buf.slice(); // clone array\n    let out = [];\n    for (let i = 0; i < (1 << nbits) - 1; i++) {\n        let feedback = sr[0];\n        out.push(feedback ? 1 : 0);\n        taps.forEach(t => {\n            feedback ^= sr[t];\n        });\n        sr.push(feedback);\n        sr.shift();\n    }\n    return out;\n}\n\nfunction mls(n, seed = null) {\n    if (!(n in bittaps)) {\n        throw new BitError(`taps for ${n} bits unknown`);\n    }\n    let taps = bittaps[n];\n    if (seed === null) {\n        seed = Array(n).fill(1);\n    } else if (seed.length !== n) {\n        throw new BitError(`length of seed must equal ${n}`);\n    }\n    return lfsr(taps, seed);\n}\n\nexport function generateMLS(nbits) {\n    nbits = parseInt(nbits);\n    let m = mls(nbits);\n    // nbits = 65535\n    return m\n}\n","import { drawResults, clearCanvas } from './helper'\nimport { generateMLS } from './mls'\n\nconst isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent)\n\nconst CANVAS = `<div class='container' id='audio-area'>\n                    <canvas id='leftChannelCanvas' width='800' height='100' style='border:1px solid #000000;'></canvas>\n                    <canvas id='rightChannelCanvas' width='800' height='100' style='border:1px solid #000000;' hidden></canvas>\n                    <canvas id='autocorrelationCanvas1' style='border:1px solid #000000;'></canvas>\n                    <canvas id='autocorrelationCanvas2' style='border:1px solid #000000;' hidden></canvas>\n                </div>`\n\nexport class TestLatencyMLS {\n\n    noiseBuffer = null\n\n    silenceBuffer = null\n\n    debugCanvas = false\n    \n    audioContext = null\n\n    worker = null\n\n    signalrecorded = null\n    \n    btnId = null\n\n    inputStream = null\n\n    recordGainNode = null\n\n    static getCorrectStreamForSafari(stream){\n        const safariVersionIndex = navigator.userAgent.indexOf('Version/')\n        const versionString =  navigator.userAgent.substring(safariVersionIndex + 8)\n        const safariVersion = parseFloat(versionString)        \n        if(isSafari && safariVersion > 16){\n            const micsource = TestLatencyMLS.audioContext.createMediaStreamSource(stream)\n            TestLatencyMLS.recordGainNode = TestLatencyMLS.audioContext.createGain()\n            micsource.connect(TestLatencyMLS.recordGainNode)\n            // If echocancellation is set to false in constraints the input gain from mic is very low, \n            // that's why we need to increase it to 50\n            const defaultGain = 50\n            TestLatencyMLS.recordGainNode.gain.value = defaultGain\n            const dest = TestLatencyMLS.audioContext.createMediaStreamDestination()\n            // If echocancellation is set to false in constraints the input when using wired earpods (with mic) \n            // is stereo but one single channel (left) so we need to force channelCount to be 1\n            dest.channelCount = 1\n            TestLatencyMLS.recordGainNode.connect(dest)\n            return dest.stream\n        } else {\n            return stream\n        }\n    }\n\n    static async initialize(ac, stream, btnId, debugCanvas) {\n\n        TestLatencyMLS.btnId = btnId\n\n        TestLatencyMLS.worker = new Worker(\n            new URL('worker.js', import.meta.url),\n            {type: 'module'}\n        )\n        TestLatencyMLS.worker.addEventListener('message', (message) => {\n            TestLatencyMLS.workerMessageHanlder(message)\n        })\n                 \n        if(debugCanvas){\n            console.log('AudioContext', ac)\n            TestLatencyMLS.debugCanvas = debugCanvas\n            document.getElementById('page-header').insertAdjacentHTML('afterend', CANVAS)\n        }        \n            \n        TestLatencyMLS.audioContext = ac\n        TestLatencyMLS.onAudioPermissionGranted(stream)\n    }\n\n    static onAudioPermissionGranted(inputStream) {\n        \n        const noisemls = generateMLS(15)\n        TestLatencyMLS.noiseBuffer = TestLatencyMLS.generateAudio(noisemls, TestLatencyMLS.audioContext.sampleRate)\n        TestLatencyMLS.silenceBuffer = TestLatencyMLS.generateSilence(noisemls, TestLatencyMLS.audioContext.sampleRate)\n        const userMediaStream =  TestLatencyMLS.getCorrectStreamForSafari(inputStream)\n        \n        TestLatencyMLS.inputStream = userMediaStream\n        if(TestLatencyMLS.debugCanvas){\n            userMediaStream.getAudioTracks().forEach(async function(track) {\n                console.log('Test Latency Track Settings', track)\n                console.log('Test Latency Track Settings', track.getSettings())\n            })\n        }\n        TestLatencyMLS.displayStart()\n    }\n\n\n    static displayStart() {\n\n        TestLatencyMLS.content = document.getElementById(TestLatencyMLS.btnId)\n        TestLatencyMLS.content.innerHTML = ''        \n        TestLatencyMLS.startbutton = document.createElement('a')\n        TestLatencyMLS.startbutton.innerText = 'TEST LATENCY'\n        TestLatencyMLS.startbutton.onclick = TestLatencyMLS.onAudioSetupFinished\n        TestLatencyMLS.content.appendChild(TestLatencyMLS.startbutton)\n    \n        if(TestLatencyMLS.debugCanvas){\n            clearCanvas()\n        }\n    }\n\n    static async onAudioSetupFinished() {\n        TestLatencyMLS.startbutton.innerText = 'STOP'       \n        TestLatencyMLS.startbutton.onclick = TestLatencyMLS.displayStart\n        TestLatencyMLS.prepareAudioToPlayAndrecord()\n    }\n\n    static prepareAudioToPlayAndrecord() {\n\n        TestLatencyMLS.signalrecorded = null\n\n        const silenceSource = TestLatencyMLS.audioContext.createBufferSource()\n\n        silenceSource.buffer = TestLatencyMLS.silenceBuffer\n\n        silenceSource.connect(TestLatencyMLS.audioContext.destination)\n       \n        const doTheTest = () => {\n\n            const noiseSource = TestLatencyMLS.audioContext.createBufferSource()\n            noiseSource.buffer = TestLatencyMLS.noiseBuffer\n\n            noiseSource.connect(TestLatencyMLS.audioContext.destination)\n\n            let chunks = []\n\n            const mediaRecorder = new MediaRecorder(TestLatencyMLS.inputStream)\n\n            mediaRecorder.ondataavailable = async (event) => {\n                chunks.push(event.data)\n            }\n            mediaRecorder.onstop = async () => {\n                noiseSource.disconnect(TestLatencyMLS.audioContext.destination)\n                TestLatencyMLS.displayAudioTagElem(chunks, mediaRecorder.mimeType)\n            }\n\n            mediaRecorder.start()\n\n            noiseSource.start()\n            noiseSource.onended = function () {\n                mediaRecorder.stop()\n                TestLatencyMLS.finishTest()\n            }\n        }\n        silenceSource.start()\n        silenceSource.onended = function () {\n            silenceSource.disconnect(TestLatencyMLS.audioContext.destination)\n            doTheTest()\n        }\n    }\n\n    static finishTest() {\n        TestLatencyMLS.startbutton.innerText = 'PROCESSING... '\n        TestLatencyMLS.startbutton.onclick = TestLatencyMLS.displayStart        \n    }\n\n    static async blobToAudioBuffer(audioContext, blob) {\n        const arrayBuffer = await blob.arrayBuffer()\n        return await audioContext.decodeAudioData(arrayBuffer)\n    }\n\n    static workerMessageHanlder(message){\n        if(message.data.correlation){\n            TestLatencyMLS.correlation = message.data.correlation\n            TestLatencyMLS.worker.postMessage({\n                command: 'findpeak',\n                array: TestLatencyMLS.correlation,\n                channel: message.data.channel\n            })\n        }\n        if(message.data.peakValuePow){                 \n            TestLatencyMLS.displayresults(message.data, TestLatencyMLS.signalrecorded, TestLatencyMLS.noiseBuffer, TestLatencyMLS.correlation)\n        }\n    }\n    static async displayAudioTagElem(chunks, mimeType) {\n        \n        const recordedAudio = new Blob(chunks, { type: mimeType })\n        \n        TestLatencyMLS.signalrecorded = await TestLatencyMLS.blobToAudioBuffer(TestLatencyMLS.audioContext, recordedAudio)\n        \n        if(TestLatencyMLS.debugCanvas){\n            console.log('signalrecorded', TestLatencyMLS.signalrecorded)\n            console.log('mlssignal', TestLatencyMLS.noiseBuffer)\n        }\n        \n        TestLatencyMLS.correlation = null\n        TestLatencyMLS.worker.postMessage({\n            command: 'correlation',\n            data1: TestLatencyMLS.signalrecorded.getChannelData(0), \n            data2: TestLatencyMLS.noiseBuffer.getChannelData(0), \n            maxLag: (0.600 * TestLatencyMLS.audioContext.sampleRate),\n            channel: 0\n        })\n        URL.revokeObjectURL(recordedAudio)\n    }\n\n    static generateAudio(mlsSequence, frequency) {        \n\n        const audioBuffer = TestLatencyMLS.audioContext.createBuffer(1, mlsSequence.length, frequency)\n        let bufferData = audioBuffer.getChannelData(0)\n        for (let i = 0; i < mlsSequence.length; i++) {\n            // Convert binary sequence to audio signal\n            bufferData[i] = mlsSequence[i] === 1 ? 1.0 : -1.0  // Map 1 to 1.0 and 0 to -1.0\n        }\n        return audioBuffer\n    }\n\n    static generateSilence(mlsSequence, frequency) {  \n\n        const audioBuffer = TestLatencyMLS.audioContext.createBuffer(1, mlsSequence.length, frequency)\n        let bufferData = audioBuffer.getChannelData(0)        \n        const silenght = Math.trunc(mlsSequence.length/8)\n        for (let i = 0; i < silenght ; i++) {\n            bufferData[i] = 0\n        }\n        return audioBuffer\n    }\n\n    static displayresults(peak, signalrecorded, mlssignal, correlation) {\n       \n        if(peak.channel === 0){\n            const roundtriplatency = Number(peak.peakIndex / mlssignal.sampleRate * 1000).toFixed(2)\n            const ratioIs = Math.log10(peak.peakValuePow / peak.mean)\n            console.log('Corr Ratio', ratioIs)\n            if(ratioIs <= 1.8){\n                console.error('The Latency Test did not go well, there could be an issue with the audio settings')\n            }\n            //console.log('Corr ABS(Ratio)', Math.abs(ratioIs))\n            TestLatencyMLS.startbutton.innerText = 'TEST AGAIN '\n            TestLatencyMLS.startbutton.innerHTML += `<span class='badge badge-info'>lat: ${roundtriplatency} ms.</span><br>`\n            TestLatencyMLS.startbutton.innerHTML += `<span class='badge badge-light'>ratio: ${ratioIs.toFixed(2)}</span>`\n            if(TestLatencyMLS.debugCanvas) {\n                console.log('Channel', peak.channel )\n                console.log('Latency = ', roundtriplatency + ' ms')\n                drawResults(signalrecorded.getChannelData(0), 'leftChannelCanvas', 'autocorrelationCanvas1', correlation)\n                console.log('signalrecorded.numberOfChannels', signalrecorded.numberOfChannels)\n                if(signalrecorded.numberOfChannels>1){\n                    document.getElementById('rightChannelCanvas').hidden = false\n                    document.getElementById('autocorrelationCanvas2').hidden = false\n                    TestLatencyMLS.correlation = null\n                    TestLatencyMLS.worker.postMessage({\n                        command: 'correlation',\n                        data1: TestLatencyMLS.signalrecorded.getChannelData(1), \n                        data2: TestLatencyMLS.noiseBuffer.getChannelData(0), \n                        maxLag: (0.600 * TestLatencyMLS.audioContext.sampleRate),\n                        channel: 1\n                    })\n                }\n            }\n        } else{\n            console.log('Channel', peak.channel )\n            const roundtriplatency = peak.peakIndex / mlssignal.sampleRate * 1000\n            console.log('Latency = ', roundtriplatency + ' ms')\n            const ratioIs = Math.log10(peak.peakValuePow / peak.mean)\n            console.log('Corr Ratio', ratioIs)\n            drawResults(signalrecorded.getChannelData(1),  'rightChannelCanvas', 'autocorrelationCanvas2', TestLatencyMLS.correlation)\n        }      \n    }\n}","import { TestLatencyMLS} from './test.js'\n\nconst debugCanvas = true\n\nconst TEST_LAT_MLS_BTN_ID = 'testlatencymlsbtn'\n\nconst constraints = { audio: {echoCancellation:false, noiseSuppression:false, autoGainControl:false, latency: 0, channelCount: 1 }}\n\nconst main = async () => {\n    \n    const stream = await navigator.mediaDevices.getUserMedia(constraints)\n\n    const ac = new AudioContext({latencyHint:0})\n\n    TestLatencyMLS.initialize(ac, stream, TEST_LAT_MLS_BTN_ID, debugCanvas)\n}\nmain()"]}